name: "Release"

on:
  pull_request:
  push:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
          # Nix Flakes doesn't work on shallow clones
          fetch-depth: 0
    - uses: cachix/install-nix-action@v12
      with:
        install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-3.0pre20201007_5257a25/install
        extra_nix_config: |
          experimental-features = nix-command flakes
    - run: nix develop -c "make"
    - id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - uses: actions/github-script@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const path = require('path');
          const fs = require('fs');
          const release_id = '${{ needs.create_release.outputs.id }}';
          for (let file of await fs.readdirSync('./output')) {
            if (path.extname(file) === '.pdf') {
              console.log('uploadReleaseAsset', file);
              await github.repos.uploadReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release_id,
                name: file,
                data: await fs.readFileSync(`./${file}`)
              });
            }
          }
